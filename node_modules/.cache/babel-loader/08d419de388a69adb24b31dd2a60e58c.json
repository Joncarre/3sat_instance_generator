{"ast":null,"code":"// Creates the structure for a JSON file\nexport const buildJSON = _oldChain => {\n  let object = {};\n  let chain = String(_oldChain).replace(/\\D/g, '');\n  let tempArray = Array.from(chain);\n  let arrayValue = new Array(tempArray.length);\n  let arraySign = new Array(tempArray.length);\n  for (let i = 0; i < tempArray.length; i++) {\n    arrayValue[i] = parseInt(tempArray[i]);\n    if (Math.random() < 0.5) arraySign[i] = 1;else arraySign[i] = 0;\n  }\n  object.value = arrayValue;\n  object.sign = arraySign;\n  return JSON.stringify(object);\n};\nexport const downloadJSON = (json, id) => {\n  const element = document.createElement(\"a\");\n  const textFile = new Blob([json], {\n    type: 'text/plain'\n  }); //pass data from localStorage API to blob\n  element.href = URL.createObjectURL(textFile);\n  element.download = `3SAT_instance_${id}.json`;\n  document.body.appendChild(element);\n  element.click();\n};","map":{"version":3,"names":["buildJSON","_oldChain","object","chain","String","replace","tempArray","Array","from","arrayValue","length","arraySign","i","parseInt","Math","random","value","sign","JSON","stringify","downloadJSON","json","id","element","document","createElement","textFile","Blob","type","href","URL","createObjectURL","download","body","appendChild","click"],"sources":["C:/Users/Jona_/Documents/GitHub/3sat_instance_generator/src/components/ColumnHeaderTable/helperFunctions.js"],"sourcesContent":["// Creates the structure for a JSON file\r\nexport const buildJSON = _oldChain => {\r\n    let object = {};\r\n    let chain = String(_oldChain).replace(/\\D/g, '');\r\n    let tempArray = Array.from(chain);\r\n    let arrayValue = new Array(tempArray.length);\r\n    let arraySign = new Array(tempArray.length);\r\n    for (let i = 0; i < tempArray.length; i++) {\r\n        arrayValue[i] = parseInt(tempArray[i]);\r\n        if (Math.random() < 0.5)\r\n            arraySign[i] = 1;\r\n        else\r\n            arraySign[i] = 0;\r\n    }\r\n    object.value = arrayValue;\r\n    object.sign = arraySign;\r\n    return JSON.stringify(object);\r\n}\r\n\r\nexport const downloadJSON = (json, id) => {\r\n    const element = document.createElement(\"a\");\r\n    const textFile = new Blob([json], { type: 'text/plain' }); //pass data from localStorage API to blob\r\n    element.href = URL.createObjectURL(textFile);\r\n    element.download = `3SAT_instance_${id}.json`;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n}"],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAGC,SAAS,IAAI;EAClC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAIC,KAAK,GAAGC,MAAM,CAACH,SAAS,CAAC,CAACI,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAChD,IAAIC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACL,KAAK,CAAC;EACjC,IAAIM,UAAU,GAAG,IAAIF,KAAK,CAACD,SAAS,CAACI,MAAM,CAAC;EAC5C,IAAIC,SAAS,GAAG,IAAIJ,KAAK,CAACD,SAAS,CAACI,MAAM,CAAC;EAC3C,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,SAAS,CAACI,MAAM,EAAEE,CAAC,EAAE,EAAE;IACvCH,UAAU,CAACG,CAAC,CAAC,GAAGC,QAAQ,CAACP,SAAS,CAACM,CAAC,CAAC,CAAC;IACtC,IAAIE,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,EACnBJ,SAAS,CAACC,CAAC,CAAC,GAAG,CAAC,CAAC,KAEjBD,SAAS,CAACC,CAAC,CAAC,GAAG,CAAC;EACxB;EACAV,MAAM,CAACc,KAAK,GAAGP,UAAU;EACzBP,MAAM,CAACe,IAAI,GAAGN,SAAS;EACvB,OAAOO,IAAI,CAACC,SAAS,CAACjB,MAAM,CAAC;AACjC,CAAC;AAED,OAAO,MAAMkB,YAAY,GAAG,CAACC,IAAI,EAAEC,EAAE,KAAK;EACtC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EAC3C,MAAMC,QAAQ,GAAG,IAAIC,IAAI,CAAC,CAACN,IAAI,CAAC,EAAE;IAAEO,IAAI,EAAE;EAAa,CAAC,CAAC,CAAC,CAAC;EAC3DL,OAAO,CAACM,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACL,QAAQ,CAAC;EAC5CH,OAAO,CAACS,QAAQ,GAAI,iBAAgBV,EAAG,OAAM;EAC7CE,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACX,OAAO,CAAC;EAClCA,OAAO,CAACY,KAAK,EAAE;AACnB,CAAC"},"metadata":{},"sourceType":"module"}